{
  "configs":[
    {
      "id": "poll_time_min",
      "label": {"en": "Poll time in minutes"},
      "val_t": "string",
      "ui": {
        "type": "input_string"
      },
      "val": {
        "default": ""
      },
      "config_point": "any"
    }
  ],
  "ui_buttons": [
    {
      "id":"sync",
      "label": {"en": "sync"},
      "req": {
        "serv":"glamox",
        "intf_t": "cmd.system.sync",
        "val": ""
      },
      "hidden":false
    }
  ],
  "ui_blocks": [
    {
      "id": "sync",
      "header": {"en": "Synchronize with Glamox app"},
      "text": {"en": "The app wil find and include all devices connected to your Glamox user. You need to be logged in before synchronizing."},
      "configs": [],
      "buttons": ["sync"],
      "footer": {"en": ""},
      "hidden":false
    },
    {
      "id": "poll_time_min",
      "header": {"en": "Poll Time"},
      "text": {"en": "Set how often you want futurehome to get temperature reports from Glamox in minutes."},
      "configs": ["poll_time_min"],
      "buttons": [],
      "footer": {"en": "Click save to save new poll time. After changing this value you need to stop and start the Glamox app in playgrounds."},
      "hidden":false
    }
  ],
  "auth": {
    "type": "oauth2_code_grant",
    "code_grant_login_page_url" : "https://smart-apps-1.glamoxheating.com/sheater-client-api/remote_api_login.jsp?state=your_state&response_type=code&scope=your_scope&redirect_url=https://app-static-beta.futurehome.io/playground_oauth_callback",
    "redirect_url": "https://app-static-beta.futurehome.io/playground_oauth_callback",
    "client_id": "future-home-api-test",
    "secret": "",
    "partner_id": "glamox",
    "auth_endpoint": "https://partners-beta.futurehome.io/api/edge/proxy/auth-code"
  },
  "init_flow":["auth","connect"],
  "services": [
    {
      "name": "glamox",
      "alias": "Network managment",
      "address": "/rt:ad/rn:glamox/ad:1",
      "interfaces": [
        {
          "intf_t": "in",
          "msg_t": "cmd.app.uninstall",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.app.get_manifest",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.app.get_state",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.system.sync",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.system.reconnect",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.app.manifest_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.config.extended_set",
          "val_t": "str_map",
          "ver": "1"
        },
        {
          "inft_t": "out",
          "msg_t": "evt.app.config_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.auth.set_tokens",
          "val_t": "str_map",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.auth.status_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.auth.logout",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.network.get_all_nodes",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.thing.get_inclusion_report",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.thing.inclusion",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.thing.delete",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.thing.inclusion_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.thing.exclusion_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.network.all_nodes_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.log.set_level",
          "val_t": "string",
          "ver": "1"
        }
      ]
    }
  ],
  "app_state": {

  }
}